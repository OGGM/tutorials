Traceback (most recent call last):
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fmod = flowline.FileModel(gdir.get_filepath('model_run'))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/file_manager.py[0m in [0;36m_acquire_with_cache_info[0;34m(self, needs_lock)[0m
[1;32m    198[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 199[0;31m                 [0mfile[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_cache[0m[0;34m[[0m[0mself[0m[0;34m.[0m[0m_key[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    200[0m             [0;32mexcept[0m [0mKeyError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/lru_cache.py[0m in [0;36m__getitem__[0;34m(self, key)[0m
[1;32m     52[0m         [0;32mwith[0m [0mself[0m[0;34m.[0m[0m_lock[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 53[0;31m             [0mvalue[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_cache[0m[0;34m[[0m[0mkey[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m             [0mself[0m[0;34m.[0m[0m_cache[0m[0;34m.[0m[0mmove_to_end[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyError[0m: [<class 'netCDF4._netCDF4.Dataset'>, ('/tmp/OGGM/OGGM-flowlines/per_glacier/RGI60-11/RGI60-11.00/RGI60-11.00897/model_run.nc',), 'r', (('clobber', True), ('diskless', False), ('format', 'NETCDF4'), ('persist', False))]

During handling of the above exception, another exception occurred:

[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-13-94ac8dfbe8a1>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mfmod[0m [0;34m=[0m [0mflowline[0m[0;34m.[0m[0mFileModel[0m[0;34m([0m[0mgdir[0m[0;34m.[0m[0mget_filepath[0m[0;34m([0m[0;34m'model_run'[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/oggm/core/flowline.py[0m in [0;36m__init__[0;34m(self, path)[0m
[1;32m   1782[0m         """
[1;32m   1783[0m [0;34m[0m[0m
[0;32m-> 1784[0;31m         [0mself[0m[0;34m.[0m[0mfls[0m [0;34m=[0m [0mglacier_from_netcdf[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1785[0m [0;34m[0m[0m
[1;32m   1786[0m         [0mfl_tss[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/oggm/core/flowline.py[0m in [0;36mglacier_from_netcdf[0;34m(path)[0m
[1;32m   1950[0m     [0;34m"""Instanciates a list of flowlines from an xarray Dataset."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1951[0m [0;34m[0m[0m
[0;32m-> 1952[0;31m     [0;32mwith[0m [0mxr[0m[0;34m.[0m[0mopen_dataset[0m[0;34m([0m[0mpath[0m[0;34m)[0m [0;32mas[0m [0mds[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1953[0m         [0mfls[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m   1954[0m         [0;32mfor[0m [0mflid[0m [0;32min[0m [0mds[0m[0;34m[[0m[0;34m'flowlines'[0m[0;34m][0m[0;34m.[0m[0mvalues[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/api.py[0m in [0;36mopen_dataset[0;34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, backend_kwargs, *args, **kwargs)[0m
[1;32m    499[0m [0;34m[0m[0m
[1;32m    500[0m     [0moverwrite_encoded_chunks[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0;34m"overwrite_encoded_chunks"[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 501[0;31m     backend_ds = backend.open_dataset(
[0m[1;32m    502[0m         [0mfilename_or_obj[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    503[0m         [0mdrop_variables[0m[0;34m=[0m[0mdrop_variables[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/netCDF4_.py[0m in [0;36mopen_dataset[0;34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, format, clobber, diskless, persist, lock, autoclose)[0m
[1;32m    545[0m [0;34m[0m[0m
[1;32m    546[0m         [0mfilename_or_obj[0m [0;34m=[0m [0m_normalize_path[0m[0;34m([0m[0mfilename_or_obj[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 547[0;31m         store = NetCDF4DataStore.open(
[0m[1;32m    548[0m             [0mfilename_or_obj[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    549[0m             [0mmode[0m[0;34m=[0m[0mmode[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/netCDF4_.py[0m in [0;36mopen[0;34m(cls, filename, mode, format, group, clobber, diskless, persist, lock, lock_maker, autoclose)[0m
[1;32m    377[0m             [0mnetCDF4[0m[0;34m.[0m[0mDataset[0m[0;34m,[0m [0mfilename[0m[0;34m,[0m [0mmode[0m[0;34m=[0m[0mmode[0m[0;34m,[0m [0mkwargs[0m[0;34m=[0m[0mkwargs[0m[0;34m[0m[0;34m[0m[0m
[1;32m    378[0m         )
[0;32m--> 379[0;31m         [0;32mreturn[0m [0mcls[0m[0;34m([0m[0mmanager[0m[0;34m,[0m [0mgroup[0m[0;34m=[0m[0mgroup[0m[0;34m,[0m [0mmode[0m[0;34m=[0m[0mmode[0m[0;34m,[0m [0mlock[0m[0;34m=[0m[0mlock[0m[0;34m,[0m [0mautoclose[0m[0;34m=[0m[0mautoclose[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    380[0m [0;34m[0m[0m
[1;32m    381[0m     [0;32mdef[0m [0m_acquire[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mneeds_lock[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/netCDF4_.py[0m in [0;36m__init__[0;34m(self, manager, group, mode, lock, autoclose)[0m
[1;32m    325[0m         [0mself[0m[0;34m.[0m[0m_group[0m [0;34m=[0m [0mgroup[0m[0;34m[0m[0;34m[0m[0m
[1;32m    326[0m         [0mself[0m[0;34m.[0m[0m_mode[0m [0;34m=[0m [0mmode[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 327[0;31m         [0mself[0m[0;34m.[0m[0mformat[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mds[0m[0;34m.[0m[0mdata_model[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    328[0m         [0mself[0m[0;34m.[0m[0m_filename[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mds[0m[0;34m.[0m[0mfilepath[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    329[0m         [0mself[0m[0;34m.[0m[0mis_remote[0m [0;34m=[0m [0mis_remote_uri[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_filename[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/netCDF4_.py[0m in [0;36mds[0;34m(self)[0m
[1;32m    386[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m
[1;32m    387[0m     [0;32mdef[0m [0mds[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 388[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_acquire[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    389[0m [0;34m[0m[0m
[1;32m    390[0m     [0;32mdef[0m [0mopen_store_variable[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mvar[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/netCDF4_.py[0m in [0;36m_acquire[0;34m(self, needs_lock)[0m
[1;32m    380[0m [0;34m[0m[0m
[1;32m    381[0m     [0;32mdef[0m [0m_acquire[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mneeds_lock[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 382[0;31m         [0;32mwith[0m [0mself[0m[0;34m.[0m[0m_manager[0m[0;34m.[0m[0macquire_context[0m[0;34m([0m[0mneeds_lock[0m[0;34m)[0m [0;32mas[0m [0mroot[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    383[0m             [0mds[0m [0;34m=[0m [0m_nc4_require_group[0m[0;34m([0m[0mroot[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_group[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_mode[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    384[0m         [0;32mreturn[0m [0mds[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/contextlib.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m    111[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0margs[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mkwds[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mfunc[0m[0;34m[0m[0;34m[0m[0m
[1;32m    112[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 113[0;31m             [0;32mreturn[0m [0mnext[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mgen[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    114[0m         [0;32mexcept[0m [0mStopIteration[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    115[0m             [0;32mraise[0m [0mRuntimeError[0m[0;34m([0m[0;34m"generator didn't yield"[0m[0;34m)[0m [0;32mfrom[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/file_manager.py[0m in [0;36macquire_context[0;34m(self, needs_lock)[0m
[1;32m    185[0m     [0;32mdef[0m [0macquire_context[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mneeds_lock[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    186[0m         [0;34m"""Context manager for acquiring a file."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 187[0;31m         [0mfile[0m[0;34m,[0m [0mcached[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_acquire_with_cache_info[0m[0;34m([0m[0mneeds_lock[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    188[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    189[0m             [0;32myield[0m [0mfile[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/pyenv/versions/3.8.10/lib/python3.8/site-packages/xarray/backends/file_manager.py[0m in [0;36m_acquire_with_cache_info[0;34m(self, needs_lock)[0m
[1;32m    203[0m                     [0mkwargs[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    204[0m                     [0mkwargs[0m[0;34m[[0m[0;34m"mode"[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_mode[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 205[0;31m                 [0mfile[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_opener[0m[0;34m([0m[0;34m*[0m[0mself[0m[0;34m.[0m[0m_args[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    206[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0m_mode[0m [0;34m==[0m [0;34m"w"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    207[0m                     [0;31m# ensure file doesn't get overriden when opened again[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32msrc/netCDF4/_netCDF4.pyx[0m in [0;36mnetCDF4._netCDF4.Dataset.__init__[0;34m()[0m

[0;32msrc/netCDF4/_netCDF4.pyx[0m in [0;36mnetCDF4._netCDF4._ensure_nc_success[0;34m()[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: b'/tmp/OGGM/OGGM-flowlines/per_glacier/RGI60-11/RGI60-11.00/RGI60-11.00897/model_run.nc'
FileNotFoundError: [Errno 2] No such file or directory: b'/tmp/OGGM/OGGM-flowlines/per_glacier/RGI60-11/RGI60-11.00/RGI60-11.00897/model_run.nc'

