Traceback (most recent call last):
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/asyncio/base_events.py", line 641, in run_until_complete
    return future.result()
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from oggm.utils import write_centerlines_to_shape

write_centerlines_to_shape(gdirs,  # The glaciers to process
                           path='outputs/Norway_Centerlines.shp',  # The output file
                           to_tar=False,  # set to True to put everything into one single tar file
                           to_crs=inventory.crs,  # Write into the projection of the original inventory
                           keep_main_only=True,  # Write only the main flowline and discard the tributaries
                          )
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mCPLE_AppDefinedError[0m                      Traceback (most recent call last)
File [0;32mfiona/ogrext.pyx:1133[0m, in [0;36mfiona.ogrext.WritingSession.start[0;34m()[0m

File [0;32mfiona/_err.pyx:291[0m, in [0;36mfiona._err.exc_wrap_pointer[0;34m()[0m

[0;31mCPLE_AppDefinedError[0m: Failed to create file outputs/Norway_Centerlines.shp: No such file or directory

During handling of the above exception, another exception occurred:

[0;31mDriverIOError[0m                             Traceback (most recent call last)
Input [0;32mIn [10][0m, in [0;36m<cell line: 3>[0;34m()[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01moggm[39;00m[38;5;21;01m.[39;00m[38;5;21;01mutils[39;00m [38;5;28;01mimport[39;00m write_centerlines_to_shape
[0;32m----> 3[0m [43mwrite_centerlines_to_shape[49m[43m([49m[43mgdirs[49m[43m,[49m[43m  [49m[38;5;66;43;03m# The glaciers to process[39;49;00m
[1;32m      4[0m [43m                           [49m[43mpath[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43moutputs/Norway_Centerlines.shp[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m  [49m[38;5;66;43;03m# The output file[39;49;00m
[1;32m      5[0m [43m                           [49m[43mto_tar[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m[43m  [49m[38;5;66;43;03m# set to True to put everything into one single tar file[39;49;00m
[1;32m      6[0m [43m                           [49m[43mto_crs[49m[38;5;241;43m=[39;49m[43minventory[49m[38;5;241;43m.[39;49m[43mcrs[49m[43m,[49m[43m  [49m[38;5;66;43;03m# Write into the projection of the original inventory[39;49;00m
[1;32m      7[0m [43m                           [49m[43mkeep_main_only[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m  [49m[38;5;66;43;03m# Write only the main flowline and discard the tributaries[39;49;00m
[1;32m      8[0m [43m                          [49m[43m)[49m

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/oggm/utils/_workflow.py:549[0m, in [0;36mglobal_task.__call__.<locals>._global_task[0;34m(gdirs, **kwargs)[0m
[1;32m    545[0m [38;5;28mself[39m[38;5;241m.[39mlog[38;5;241m.[39mworkflow([38;5;124m'[39m[38;5;124mApplying global task [39m[38;5;132;01m%s[39;00m[38;5;124m on [39m[38;5;132;01m%s[39;00m[38;5;124m glaciers[39m[38;5;124m'[39m,
[1;32m    546[0m                   task_func[38;5;241m.[39m[38;5;18m__name__[39m, [38;5;28mlen[39m(gdirs))
[1;32m    548[0m [38;5;66;03m# Run the task[39;00m
[0;32m--> 549[0m [38;5;28;01mreturn[39;00m [43mtask_func[49m[43m([49m[43mgdirs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/oggm/utils/_workflow.py:877[0m, in [0;36mwrite_centerlines_to_shape[0;34m(gdirs, path, to_tar, to_crs, filesuffix, flowlines_output, ensure_exterior_match, geometrical_widths_output, corrected_widths_output, keep_main_only, simplify_line, corner_cutting)[0m
[1;32m    875[0m odf [38;5;241m=[39m odf[38;5;241m.[39msort_values(by[38;5;241m=[39m[38;5;124m'[39m[38;5;124mRGIID[39m[38;5;124m'[39m)
[1;32m    876[0m odf[38;5;241m.[39mcrs [38;5;241m=[39m to_crs
[0;32m--> 877[0m [43m_write_shape_to_disk[49m[43m([49m[43modf[49m[43m,[49m[43m [49m[43mpath[49m[43m,[49m[43m [49m[43mto_tar[49m[38;5;241;43m=[39;49m[43mto_tar[49m[43m)[49m

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/oggm/utils/_workflow.py:775[0m, in [0;36m_write_shape_to_disk[0;34m(gdf, fpath, to_tar)[0m
[1;32m    772[0m [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124m.shp[39m[38;5;124m'[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m fpath:
[1;32m    773[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mFile ending should be .shp[39m[38;5;124m'[39m)
[0;32m--> 775[0m [43mgdf[49m[38;5;241;43m.[39;49m[43mto_file[49m[43m([49m[43mfpath[49m[43m)[49m
[1;32m    777[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m to_tar:
[1;32m    778[0m     [38;5;66;03m# Done here[39;00m
[1;32m    779[0m     [38;5;28;01mreturn[39;00m

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/geopandas/geodataframe.py:1114[0m, in [0;36mGeoDataFrame.to_file[0;34m(self, filename, driver, schema, index, **kwargs)[0m
[1;32m   1053[0m [38;5;124;03m"""Write the ``GeoDataFrame`` to a file.[39;00m
[1;32m   1054[0m 
[1;32m   1055[0m [38;5;124;03mBy default, an ESRI shapefile is written, but any OGR data source[39;00m
[0;32m   (...)[0m
[1;32m   1110[0m [38;5;124;03m>>> gdf.to_file('dataframe.shp', mode="a")  # doctest: +SKIP[39;00m
[1;32m   1111[0m [38;5;124;03m"""[39;00m
[1;32m   1112[0m [38;5;28;01mfrom[39;00m [38;5;21;01mgeopandas[39;00m[38;5;21;01m.[39;00m[38;5;21;01mio[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfile[39;00m [38;5;28;01mimport[39;00m _to_file
[0;32m-> 1114[0m [43m_to_file[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mfilename[49m[43m,[49m[43m [49m[43mdriver[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/geopandas/io/file.py:393[0m, in [0;36m_to_file[0;34m(df, filename, driver, schema, index, mode, crs, **kwargs)[0m
[1;32m    391[0m [38;5;28;01melif[39;00m crs:
[1;32m    392[0m     crs_wkt [38;5;241m=[39m crs[38;5;241m.[39mto_wkt([38;5;124m"[39m[38;5;124mWKT1_GDAL[39m[38;5;124m"[39m)
[0;32m--> 393[0m [38;5;28;01mwith[39;00m [43mfiona[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m
[1;32m    394[0m [43m    [49m[43mfilename[49m[43m,[49m[43m [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m[43m [49m[43mdriver[49m[38;5;241;43m=[39;49m[43mdriver[49m[43m,[49m[43m [49m[43mcrs_wkt[49m[38;5;241;43m=[39;49m[43mcrs_wkt[49m[43m,[49m[43m [49m[43mschema[49m[38;5;241;43m=[39;49m[43mschema[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m
[1;32m    395[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m colxn:
[1;32m    396[0m     colxn[38;5;241m.[39mwriterecords(df[38;5;241m.[39miterfeatures())

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/fiona/env.py:408[0m, in [0;36mensure_env_with_credentials.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    405[0m [38;5;129m@wraps[39m(f)
[1;32m    406[0m [38;5;28;01mdef[39;00m [38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    407[0m     [38;5;28;01mif[39;00m local[38;5;241m.[39m_env:
[0;32m--> 408[0m         [38;5;28;01mreturn[39;00m [43mf[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    409[0m     [38;5;28;01melse[39;00m:
[1;32m    410[0m         [38;5;28;01mif[39;00m [38;5;28misinstance[39m(args[[38;5;241m0[39m], [38;5;28mstr[39m):

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/fiona/__init__.py:280[0m, in [0;36mopen[0;34m(fp, mode, driver, schema, crs, encoding, layer, vfs, enabled_drivers, crs_wkt, **kwargs)[0m
[1;32m    278[0m     [38;5;28;01melse[39;00m:
[1;32m    279[0m         this_schema [38;5;241m=[39m [38;5;28;01mNone[39;00m
[0;32m--> 280[0m     c [38;5;241m=[39m [43mCollection[49m[43m([49m[43mpath[49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43mcrs[49m[38;5;241;43m=[39;49m[43mcrs[49m[43m,[49m[43m [49m[43mdriver[49m[38;5;241;43m=[39;49m[43mdriver[49m[43m,[49m[43m [49m[43mschema[49m[38;5;241;43m=[39;49m[43mthis_schema[49m[43m,[49m
[1;32m    281[0m [43m                   [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m[43m [49m[43mlayer[49m[38;5;241;43m=[39;49m[43mlayer[49m[43m,[49m[43m [49m[43menabled_drivers[49m[38;5;241;43m=[39;49m[43menabled_drivers[49m[43m,[49m[43m [49m[43mcrs_wkt[49m[38;5;241;43m=[39;49m[43mcrs_wkt[49m[43m,[49m
[1;32m    282[0m [43m                   [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    283[0m [38;5;28;01melse[39;00m:
[1;32m    284[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    285[0m         [38;5;124m"[39m[38;5;124mmode string must be one of [39m[38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;124mw[39m[38;5;124m'[39m[38;5;124m, or [39m[38;5;124m'[39m[38;5;124ma[39m[38;5;124m'[39m[38;5;124m, not [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m mode)

File [0;32m/usr/local/pyenv/versions/3.10.2/lib/python3.10/site-packages/fiona/collection.py:165[0m, in [0;36mCollection.__init__[0;34m(self, path, mode, driver, schema, crs, encoding, layer, vsi, archive, enabled_drivers, crs_wkt, ignore_fields, ignore_geometry, **kwargs)[0m
[1;32m    163[0m     [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mmode [38;5;129;01min[39;00m ([38;5;124m'[39m[38;5;124ma[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mw[39m[38;5;124m'[39m):
[1;32m    164[0m         [38;5;28mself[39m[38;5;241m.[39msession [38;5;241m=[39m WritingSession()
[0;32m--> 165[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msession[49m[38;5;241;43m.[39;49m[43mstart[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    166[0m [38;5;28;01mexcept[39;00m [38;5;167;01mIOError[39;00m:
[1;32m    167[0m     [38;5;28mself[39m[38;5;241m.[39msession [38;5;241m=[39m [38;5;28;01mNone[39;00m

File [0;32mfiona/ogrext.pyx:1141[0m, in [0;36mfiona.ogrext.WritingSession.start[0;34m()[0m

[0;31mDriverIOError[0m: Failed to create file outputs/Norway_Centerlines.shp: No such file or directory
DriverIOError: Failed to create file outputs/Norway_Centerlines.shp: No such file or directory

